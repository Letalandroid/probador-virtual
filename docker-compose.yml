version: '3.8'

services:
  # Backend service (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.npm
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/probador_virtual}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - SUPABASE_URL=${SUPABASE_URL:-https://schbbdodgajmbzeeriwd.supabase.co}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNjaGJiZG9kZ2FqbWJ6ZWVyaXdkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3MjMxNjMsImV4cCI6MjA3NDI5OTE2M30.AfrB3ZcQTqGkQzoMPIlINhmkcVvSq8ew29oVwypgKD0}
    depends_on:
      - postgres
    networks:
      - probador-network
    restart: unless-stopped

  # Frontend service (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000
      - VITE_PYTHON_API_URL=http://localhost:8000
      - VITE_SUPABASE_URL=${SUPABASE_URL:-https://schbbdodgajmbzeeriwd.supabase.co}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNjaGJiZG9kZ2FqbWJ6ZWVyaXdkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3MjMxNjMsImV4cCI6MjA3NDI5OTE2M30.AfrB3ZcQTqGkQzoMPIlINhmkcVvSq8ew29oVwypgKD0}
    depends_on:
      - backend
      - python-api
    networks:
      - probador-network
    restart: unless-stopped

  # Python AI service
  python-api:
    build:
      context: ./python
      dockerfile: Dockerfile.minimal
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your_gemini_api_key_here}
      - HOST=0.0.0.0
      - PORT=8000
      - RELOAD=false
    volumes:
      - ./python/generated_images:/app/generated_images
      - ./python/output:/app/output
      - ./python/.env:/app/.env
    networks:
      - probador-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=probador_virtual
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - probador-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - probador-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  probador-network:
    driver: bridge
